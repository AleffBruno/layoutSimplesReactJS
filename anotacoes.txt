gettingStart {
    > sera utilizado o bootstrap
    > bootstrap necessita do Jquery, porem aqui nao sera necessario
    > Libs {
        $ yarn add axios bootstrap font-awesome react-router react-router-dom
    }
}

estruturando pastas {
    > dentro de src/, cria-se components
    > dentro de components/, se cria templates
    > (veja os arquivos) dentro de templates/, cria-se logo.css,logo.js / header.css,header,js / nav.css,nav.js / main.css,main.js / footer.css,footer.js
    > obs: no main.js, ele controla o Header, pois o header fica mudando dependendo do conteudo
    > dentro de src/, cria-se pasta main, dentro cria-se App.css,App.js ( veja o arquivo )
    > ir em index.js, e trocar a referencia de App.js, agora para main/App
    > Fim, esqueleto montado
}

estilizando aplicação {
    > veja o arquivo src/main/App.css
}

trabalhando o componente Logo {
    > veja o arquivo src/templates/logo.js
    > veja o arquivo src/templates/logo.css
}

trabalhando com cabecalho {
    > dentro de App.js, importe 'bootstrap/dist/css/bootstrap.min.css', 'font-awesome/css/font-awesome.min.css'
    > passar as propriedades icon, title, subtitle no componente Main, e ele ira passar para o Header
    > em Main.js, passe {...props} para o Header, com isso as props serao propagadas 
    > veja o arquivo Header.js
    > veja o arquivo Header.css
}

trabalhando com footer {
    > veja o arquivo Footer.js
    > veja o arquivo Footer.css
}

trabalhando com nav {
    > veja o arquivo Nav.js
    > veja o arquivo Nav.css
}

trabalhando com Main {
    > atente-se a {props.children}, que serao as tags filhas que irao apra dentro de main
    > veja o arquivo Main.js
    > veja o arquivo Main.css
    > cria-se em src/components, a pasta home/home.js ( veja o arquivo )
    > foi pegue a tag e o conteudo de <Main> dentro de App.js e foi colocado em home.js
    > agora em App.js, onde tinha <Main> , vai ser <Home>
}

Rotas / mapeando urls e componentes {
    > dentro de src/main, cria-se Routes.js ( veja o arquivo )
    > importe { HashRouter } from 'react-router-dom' e Routes.js em App.js
    > Envolva os componentes que o App.js retorna em , HashRouter
    > substitua o componente <Home> por <Routes>
    > ajustes extras {
        > substituir os link com a tag <a></a>, para o componente Link do react-router-dom
        > acesse nav.js, substitua <a> por <Link>
        > o mesmo para Logo.js
    }
    > ajustes opcionais {
        > pode-se substituir <HashRouter> por <BrowserRouter>, assim a url fica mais 'amigavel'(sem o hash), porem pode ocorrer erros em prod, e sera necessario configurar o apache ou ngix para o redirecionamento ser feito de forma correta
    }
}

trabalhando com UserCrud {
    > importe axios
    > configure a baseUrl ( isso poderia esta em um arquivo separado )
    > configure o estado inicial
    > crie as funcoes clear, save, getUpdatedList, updateField, renderForm
}

ajustes de responsividade {
    > acesse App.css, veja as sessoes: @media(max-width: 768px), @media(max-width: 576px)
    > acesse nav.css veja a sessao: @media(max-width: 768px) [atenção em --menu-top-height]
    > acesse logo.css veja a sessao: @media(max-width: 576px)
}